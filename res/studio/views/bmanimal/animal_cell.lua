--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Panel_1
local Panel_1 = ccui.Layout:create()
Panel_1:ignoreContentAdaptWithSize(false)
Panel_1:setClippingEnabled(false)
Panel_1:setBackGroundColorType(1)
Panel_1:setBackGroundColor({r = 150, g = 200, b = 255})
Panel_1:setBackGroundColorOpacity(0)
Panel_1:setLayoutComponentEnabled(true)
Panel_1:setName("Panel_1")
Panel_1:setTag(64)
Panel_1:setCascadeColorEnabled(true)
Panel_1:setCascadeOpacityEnabled(true)
Panel_1:setAnchorPoint(0.5000, 0.5000)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_1)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setSize({width = 172.0000, height = 182.0000})
layout:setLeftMargin(-86.0000)
layout:setRightMargin(-86.0000)
layout:setTopMargin(-91.0000)
layout:setBottomMargin(-91.0000)
Node:addChild(Panel_1)

--Create Image_1
local Image_1 = ccui.ImageView:create()
Image_1:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/B-common.plist")
Image_1:loadTexture("animal-circle-bm.png",1)
Image_1:setTouchEnabled(true);
Image_1:setLayoutComponentEnabled(true)
Image_1:setName("Image_1")
Image_1:setTag(69)
Image_1:setCascadeColorEnabled(true)
Image_1:setCascadeOpacityEnabled(true)
Image_1:setPosition(86.0000, 91.0000)
if callBackProvider~=nil then
      Image_1:addClickEventListener(callBackProvider("animal_cell.lua", Image_1, "btnAnmCell"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(Image_1)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.8081)
layout:setPercentHeight(0.7637)
layout:setSize({width = 139.0000, height = 139.0000})
layout:setLeftMargin(16.5000)
layout:setRightMargin(16.5000)
layout:setTopMargin(21.5000)
layout:setBottomMargin(21.5000)
Panel_1:addChild(Image_1)

--Create animalcsd
local animalcsd = ccui.Layout:create()
animalcsd:ignoreContentAdaptWithSize(false)
animalcsd:setClippingEnabled(false)
animalcsd:setBackGroundColorType(1)
animalcsd:setBackGroundColor({r = 150, g = 200, b = 255})
animalcsd:setBackGroundColorOpacity(0)
animalcsd:setLayoutComponentEnabled(true)
animalcsd:setName("animalcsd")
animalcsd:setTag(66)
animalcsd:setCascadeColorEnabled(true)
animalcsd:setCascadeOpacityEnabled(true)
animalcsd:setAnchorPoint(0.5000, 0.5000)
animalcsd:setPosition(86.0000, 91.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(animalcsd)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setLeftMargin(86.0000)
layout:setRightMargin(86.0000)
layout:setTopMargin(91.0000)
layout:setBottomMargin(91.0000)
Panel_1:addChild(animalcsd)

--Create nomalcsd
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/B-common.plist")
local nomalcsd = cc.Sprite:createWithSpriteFrameName("animal-circle-nomal.png")
nomalcsd:setName("nomalcsd")
nomalcsd:setTag(67)
nomalcsd:setCascadeColorEnabled(true)
nomalcsd:setCascadeOpacityEnabled(true)
nomalcsd:setPosition(86.0000, 91.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(nomalcsd)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.9477)
layout:setPercentHeight(0.9231)
layout:setSize({width = 163.0000, height = 168.0000})
layout:setLeftMargin(4.5000)
layout:setRightMargin(4.5000)
layout:setTopMargin(7.0000)
layout:setBottomMargin(7.0000)
nomalcsd:setBlendFunc({src = 1, dst = 771})
Panel_1:addChild(nomalcsd)

--Create nohavecsd
local nohavecsd = ccui.ImageView:create()
nohavecsd:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/B-common.plist")
nohavecsd:loadTexture("animal-circle-bm.png",1)
nohavecsd:setLayoutComponentEnabled(true)
nohavecsd:setName("nohavecsd")
nohavecsd:setTag(71)
nohavecsd:setCascadeColorEnabled(true)
nohavecsd:setCascadeOpacityEnabled(true)
nohavecsd:setPosition(84.2800, 93.7300)
nohavecsd:setOpacity(127)
if callBackProvider~=nil then
      nohavecsd:addClickEventListener(callBackProvider("animal_cell.lua", nohavecsd, "btnAnmCell"))
end
layout = ccui.LayoutComponent:bindLayoutComponent(nohavecsd)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.4900)
layout:setPositionPercentY(0.5150)
layout:setPercentWidth(0.8081)
layout:setPercentHeight(0.7637)
layout:setSize({width = 139.0000, height = 139.0000})
layout:setLeftMargin(14.7800)
layout:setRightMargin(18.2200)
layout:setTopMargin(18.7700)
layout:setBottomMargin(24.2300)
Panel_1:addChild(nohavecsd)

--Create selectcsd
cc.SpriteFrameCache:getInstance():addSpriteFrames("Resource/atlas/B-common.plist")
local selectcsd = cc.Sprite:createWithSpriteFrameName("animal-circle-select.png")
selectcsd:setName("selectcsd")
selectcsd:setTag(33)
selectcsd:setCascadeColorEnabled(true)
selectcsd:setCascadeOpacityEnabled(true)
selectcsd:setPosition(86.0000, 91.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(selectcsd)
layout:setPositionPercentXEnabled(true)
layout:setPositionPercentYEnabled(true)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5000)
layout:setPercentWidth(0.9477)
layout:setPercentHeight(0.9231)
layout:setSize({width = 163.0000, height = 168.0000})
layout:setLeftMargin(4.5000)
layout:setRightMargin(4.5000)
layout:setTopMargin(7.0000)
layout:setBottomMargin(7.0000)
selectcsd:setBlendFunc({src = 1, dst = 771})
Panel_1:addChild(selectcsd)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

